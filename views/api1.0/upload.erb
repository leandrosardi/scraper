<%
return_message = {}
begin
    unless  params[:file] &&
            (tmpfile = params[:file][:tempfile]) &&
            (name = params[:file][:filename])
        raise "No file selected"
    end
    # get the page object
    page = BlackStack::Scraper::Page.where(:id=>params[:id_page].to_guid).first
    # create the storage folders if they doesn't exist yet
    page.order.user.account.create_storage
    # build the file path to the storage folder of the owner of the order
    filename = "#{params[:id_page]}.html".downcase
    path = "#{page.order.user.account.storage_folder}/dfy-leads.pages"
    return_message[:filename] = filename
    return_message[:path] = path
    # create the file
    file = File.open("#{path}/#{filename}", 'wb')
    # write file content
    while blk = tmpfile.read(65536)
        file.write(blk)
    end
    # close file
    file.close
    # update page upload_end_time and upload_success
    page.upload_success = true
    page.upload_end_time = now
    page.save
    # update user.scraper_stat_total_pages stat --> canceled because performance - move it as an offline process
    #BlackStack::Scraper::User.where(:id=>page.order.id_user).first.update_stats
    # return
    return_message[:status] = 'success'
rescue => e
    return_message[:status] = e.message + ' - ' + params[:id_login].to_s + ' - ' + params.to_s #e.to_console
end
return return_message.to_json
%>